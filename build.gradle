apply plugin: 'java'
apply from: 'http://www.tellurianring.com/projects/gradle-plugins/gradle-templates/1.3/apply.groovy'
apply from: 'libraries.gradle'

ext {
  javaVersion = '1.6'
}

apply plugin: 'java'
apply plugin: 'maven'

group = 'org.obiba.gradle'
version = '1.0-SNAPSHOT'

sourceCompatibility = javaVersion
targetCompatibility = javaVersion

defaultTasks 'build'

buildDir = 'target'

repositories {
  mavenLocal()
  mavenRepo url: 'http://repo.obiba.org/repo'
  mavenCentral()
}

tasks.withType(Compile) {
  options.encoding = 'UTF-8'
}

configurations {
  pmd
  compile
  runtime
  all*.exclude group: 'commons-logging'
}

task wrapper(type: Wrapper) {
  gradleVersion = '1.5'
}

dependencies {
  compile(libraries.guava)
  compile(libraries.slf4j_api)
  compile(libraries.jsr305)
  compile(libraries.findbugs_annotation)
  compile 'net.sourceforge.pmd:pmd:5.0.3'


  testCompile(libraries.junit)
  testCompile(libraries.easymock)
  testCompile(libraries.hamcrest)
  testCompile(libraries.slf4j_log4j12)
  testCompile(libraries.jcl_slf4j)

  pmd 'net.sourceforge.pmd:pmd:5.0.3'
}

task pmd << {
  println 'Running PMD static code analysis'
  ant {
    taskdef(name: 'pmd', classname: 'net.sourceforge.pmd.ant.PMDTask', classpath: configurations.pmd.asPath)
    pmd(shortFilenames: 'true', failonruleviolation: 'false', rulesetfiles: rootProject.file('src/main/resources/pmd-ruleset.xml').toURI().toString()) {
      ruleset('Obiba PMD ruleset')
      formatter(type: 'text', toConsole: 'true')
      fileset(dir: 'src') {
        include(name: '**/*.java')
      }
    }
  }
}

